<!DOCTYPE html>
<html>
<head>
    <title>Work Item Allocation by Portfolio</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Thu Jul 13 2023 15:43:08 GMT-0500 (Central Daylight Time) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Jul 13 2023 15:43:08 GMT-0500 (Central Daylight Time)";
        var STORY    = "--";
        var BUILDER  = "jimtykal";
        var CHECKSUM = 10407965122;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("CArABU.technicalservices.Exporter",{singleton:!0,saveCSVToFile:function(a,b,c){void 0===c&&(c={type:"text/csv;charset=utf-8"}),this.saveAs(a,b,c)},saveAs:function(a,b){if(Ext.isIE9m)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for IE9 and below."});var c=null;try{c=new Blob([a],{type:"text/plain"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,window.BlobBuilder&&"TypeError"==d.name&&(bb=new BlobBuilder,bb.append([a]),c=bb.getBlob("text/plain"))}if(!c)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for this browser."});var e=b;if(Ext.isIE10p)return void window.navigator.msSaveOrOpenBlob(c,e);var f=this.createObjectURL(c);if(f){var g=document.createElement("a");"download"in g?g.download=e:g.target="_blank",g.innerHTML="Download File",g.href=f,Ext.isChrome||(g.onclick=this.destroyClickedElement,g.style.display="none",document.body.appendChild(g)),g.click()}else Rally.ui.notify.Notifier.showError({message:"Export is not supported "})},createObjectURL:function(a){return window.webkitURL?window.webkitURL.createObjectURL(a):window.URL&&window.URL.createObjectURL?window.URL.createObjectURL(a):null},destroyClickedElement:function(a){document.body.removeChild(a.target)}}),Ext.define("work-item-allocation-by-portfolio",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"display_box",tpl:'<div class="no-data-container"><div class="secondary-message">{message}</div></div>'}],integrationHeaders:{name:"work-item-allocation-by-portfolio"},config:{defaultSettings:{portfolioItemType:null,includeInProgress:!1,releaseStartDate:null,releaseEndDate:null,calculationType:"count",query:""}},exportDebug:!1,MAX_FILTERS:50,chartColors:[Rally.util.Colors.grey5,Rally.util.Colors.brick,Rally.util.Colors.lime,Rally.util.Colors.blue,Rally.util.Colors.yellow,Rally.util.Colors.green,Rally.util.Colors.orange,Rally.util.Colors.pink,Rally.util.Colors.purple,Rally.util.Colors.teal,Rally.util.Colors.red_med,Rally.util.Colors.lime_med,Rally.util.Colors.cyan,Rally.util.Colors.blue_lt,Rally.util.Colors.yellow_med,Rally.util.Colors.orange_med,Rally.util.Colors.pink_med,Rally.util.Colors.purple_med,Rally.util.Colors.teal_med,Rally.util.Colors.red_lt],launch:function(){this.fetchPortfolioItemTypes().then({success:this.initializeApp,failure:this.showErrorNotification,scope:this})},initializeApp:function(a){this.portfolioItemTypes=a,this.validateSettings()&&this.updateView()},validateSettings:function(){return!this.getSetting("portfolioItemType")||this.getPIBucketLevel()<0?(this.getDisplayBox().update({message:"Please configure a Portfolio Item Type in the App Settings."}),!1):this.getContext().getTimeboxScope()||this.getSetting("releaseStartDate")&&this.getSetting("releaseEndDate")?!0:(this.getDisplayBox().update({message:"Please configure Release Start/End Dates in the App Settings."}),!1)},getDisplayBox:function(){return this.down("#display_box")},getFilters:function(){var a,b,c,d=this.getContext().getTimeboxScope(),e=Ext.create("Rally.data.wsapi.Filter",{property:"DirectChildrenCount",operator:"=",value:0});if(d){var f=d.record.getData();b=this.adjustDate(f.ReleaseStartDate),c=this.adjustDate(f.ReleaseDate)}else b=this.getSetting("releaseStartDate"),c=this.getSetting("releaseEndDate");var g=[{property:"AcceptedDate",operator:">=",value:b},{property:"AcceptedDate",operator:"<=",value:c}];if(g=Rally.data.wsapi.Filter.and(g),0==this.getSetting("includeInProgress"))a=e.and(g);else{var h=[{property:"ScheduleState",operator:"!=",value:"Accepted"},{property:"InProgressDate",operator:"<=",value:c}];h=Rally.data.wsapi.Filter.and(h);var i=g.or(h);a=e.and(i)}if(this.getSetting("query")){var j=this.getSetting("query").replace(/\{user\}/g,this.getContext().getUser()._ref),k=Rally.data.QueryFilter.fromQueryString(j);a=a.and(k)}return a},adjustDate:function(a){const b=a.getUTCFullYear(),c=a.getUTCMonth()+1,d=a.getUTCDate(),e=b,f=c.toString().padStart(2,"0"),g=d.toString().padStart(2,"0"),h=e+"-"+f+"-"+g;return h},getPortfolioName:function(){return this.portfolioItemTypes[0].typePath.replace("PortfolioItem/","")},getFetchList:function(){return[this.getPortfolioName(),"ObjectID","FormattedID","Parent","Name","PlanEstimate","AcceptedDate","InProgressDate","ScheduleState"]},getPortfolioFetchList:function(){return["ObjectID","FormattedID","Parent","Name"]},updateView:function(){this.setLoading(!0),Deft.Chain.pipeline([this.fetchWorkItems,this.fetchPortfolioItems],this).then({success:this.processItems,failure:this.showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)},fetchPortfolioItems:function(a){var b=this.getPortfolioName(),c=Ext.create("Deft.Deferred"),d={workItems:a},e=this.getPIBucketLevel();if(0===e)c.resolve(d);else{var f=_.reduce(a,function(a,c){return c.get(b)&&!Ext.Array.contains(a,c.get(b).ObjectID)&&a.push(c.get(b).ObjectID),a},[]);if(0===f.length)c.resolve(d);else{for(var g=[],h="ObjectID",i=0;e>i;i++){i>0&&(h="Children."+h);var j=Ext.Array.map(f,function(a){return{property:h,value:a}});j.length<this.MAX_FILTERS?j.length>1&&(j=Rally.data.wsapi.Filter.or(j)):j={property:"LeafStoryCount",operator:">",value:0},g.push(this.fetchWsapiRecords({model:this.portfolioItemTypes[i].typePath,filters:j,fetch:this.getPortfolioFetchList(),enableHttpPost:!0,limit:1/0,context:{project:null}}))}Deft.Promise.all(g).then({success:function(a){d.portfolioItems=[];for(var b=0;e>b;b++)d.portfolioItems[b]=_.reduce(a[b],function(a,b){return a[b.get("ObjectID")]=b.getData(),a},{});c.resolve(d)},failure:this.showErrorNotification,scope:this})}}return c.promise},getPIBucketLevel:function(){for(var a=-1,b=this.getPortfolioItemType(),c=0;c<this.portfolioItemTypes.length;c++)this.portfolioItemTypes[c].typePath===b&&(a=c,c=this.portfolioItemTypes.length);return a},getPortfolioItemTypes:function(){return this.portfolioItemTypes},getPortfolioItemType:function(){return this.getSetting("portfolioItemType")},processItems:function(a){var b=this.getPortfolioName(),c={},d=this.getPIBucketLevel(),e={};Ext.Array.each(a.workItems,function(f){var g=f.get(b),h=this.getPortfolioAncestorKey(d,g,a.portfolioItems,e),i=h;Ext.isObject(h)&&(i=h.ObjectID),c[i]||(c[i]={data:h,count:0,points:0}),c[i].count++,c[i].points+=Number(f.get("PlanEstimate"))},this),this.buildChart(c)},getPortfolioAncestorKey:function(a,b,c){var d="None";if(!b)return d;if(0===a)return b;for(var e=b,f=0;f<c.length;f++)e!==d&&(e=c[f][e.ObjectID]&&c[f][e.ObjectID].Parent||d);return e},buildChart:function(a,b){var c=[],d=this.getUnitValue();Ext.Object.each(a,function(a,b){var e=b.data;Ext.isObject(e)?(e=Ext.String.format("{0}: {1}",e.FormattedID,e.Name),c.push({name:e,y:b[d]})):c.unshift({name:e,y:b[d]})});var e=c.sort(function(a,b){return a.y<b.y?1:a.y>b.y?-1:0});this.getDisplayBox().removeAll(),this.getDisplayBox().add({xtype:"rallychart",chartColors:this.chartColors,chartConfig:this.getChartConfig(),chartData:{series:[{type:"pie",name:"User Story Allocation",data:e,showInLegend:!1}]}})},getPortfolioItemTypeName:function(){var a=this.getPIBucketLevel();return this.portfolioItemTypes[a]&&this.portfolioItemTypes[a].name},getUnitLabel:function(){return"count"===this.getUnitValue()?"stories":"points"},getUnitValue:function(){return this.getSetting("calculationType")||"count"},getChartConfig:function(){return{chart:{type:"pie"},title:{text:"User Story Allocation by "+this.getPortfolioItemTypeName(),style:{color:"#666",fontSize:"18px",fontFamily:"ProximaNova",textTransform:"uppercase",fill:"#666"}},tooltip:{backgroundColor:"#444",headerFormat:"",pointFormat:'<div class="tooltip-label"><span style="color:{point.color};width=100px;">●</span>{point.name}: {point.y} '+this.getUnitLabel()+"</div>",shared:!0,useHTML:!0,borderColor:"#444"},plotOptions:{pie:{dataLabels:{enabled:!0,overflow:"none",format:"{point.name}: {point.percentage:.1f} %",style:{color:"#888",fontSize:"11px",fontFamily:"ProximaNovaSemiBold",fill:"#888"}},showInLegend:!1}}}},showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},fetchWorkItems:function(){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:"HierarchicalRequirement",filters:this.getFilters(),fetch:this.getFetchList(),limit:1/0}).load({callback:function(b,c){c.wasSuccessful()?a.resolve(b):a.reject("Error loading work items: "+c.error.errors.join(","))}}),a.promise},getTimeboxScope:function(){return this.getContext().getTimeboxScope()},onTimeboxScopeChange:function(a){a||(a=this.getContext().getTimeboxScope()),a&&"release"===a.getType()&&(this.getContext().setTimeboxScope(a),this.updateView())},getSettingsFields:function(){return[{xtype:"rallyportfolioitemtypecombobox",name:"portfolioItemType",fieldLabel:"Portfolio Item Type",labelAlign:"right",valueField:"TypePath",labelWidth:200},{xtype:"label",text:"By default, only User Stories that were Accepted during the specified time period are included. If you also want to include any work that was In Progress during the specified time period, check this box",margin:"0 0 0 0"},{xtype:"rallycheckboxfield",name:"includeInProgress",fieldLabel:"Include Work In Progress",labelAlign:"right",labelWidth:200},{xtype:"rallycombobox",name:"calculationType",fieldLabel:"Calculation Type",labelAlign:"right",labelWidth:200,store:Ext.create("Rally.data.custom.Store",{fields:["_ref","_refObjectName"],data:[{_ref:"count",_refObjectName:"Story Count"},{_ref:"points",_refObjectName:"Sum of Story Points"}]})},{xtype:"label",text:"NOTE: These Dates are IGNORED if page-level filter is used!",margin:"0 0 0 0"},{xtype:"datefield",name:"releaseStartDate",fieldLabel:"Release Start Date",format:"Y-m-d",labelAlign:"right",labelWidth:200},{xtype:"datefield",name:"releaseEndDate",fieldLabel:"Release End Date",format:"Y-m-d",labelAlign:"right",labelWidth:200},{type:"query"}]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()},fetchPortfolioItemTypes:function(){var a=Ext.create("Deft.Deferred"),b=Ext.create("Rally.data.wsapi.Store",{model:"TypeDefinition",fetch:["TypePath","Ordinal","Name"],filters:[{property:"TypePath",operator:"contains",value:"PortfolioItem/"}],sorters:[{property:"Ordinal",direction:"ASC"}]});return b.load({callback:function(b,c,d){if(d){var e=new Array(b.length);_.each(b,function(a){var b=Number(a.get("Ordinal"));e[b]={typePath:a.get("TypePath"),name:a.get("Name")}}),a.resolve(e)}else{var f="";c&&c.error&&c.error.errors&&(f=c.error.errors.join(",")),a.reject("Error loading Portfolio Item Types:  "+f)}}}),a.promise},fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",a).load({callback:function(c,d,e){e?b.resolve(c):b.reject(Ext.String.format("Error getting {0} for {1}: {2}",a.model,a.filters.toString(),d.error.errors.join(",")))}}),b}});
            
               Rally.launchApp('work-item-allocation-by-portfolio', {
                   name: 'Work Item Allocation by Portfolio'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.highcharts-tooltip {
    font-family:NotoSansBold;
    color:white;
}
.tooltip-point {
    text-align: right;
    color: white;
}
.tooltip-label {
    font-family:NotoSans;
    white-space:nowrap;
    font-size:13px;
    color:white;
}
.etlDate {
    color: grey;
    font-family: NotoSans;
    font-style: italic;
}

.pie-label {
    font-family:NotoSansBold;
    white-space:nowrap;
    font-size:11px;
    color:#222;
}
    </style>

</head>
<body></body>
</html>